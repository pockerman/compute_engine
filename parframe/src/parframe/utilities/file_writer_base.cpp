#include "parframe/utilities/file_writer_base.h"

#include <chrono>
#include <ctime>
#include <stdexcept>

namespace kernel
{

FileWriterBase::FileWriterBase(const std::string& file_name, FileFormats::Type t)
:
file_name_(file_name),
comment_mark_(FileWriterBase::default_comment_mark()),
t_(t)
{}

FileWriterBase::~FileWriterBase(){
    close();
}

void
FileWriterBase::close(){

    if(file_.is_open())
       file_.close();
}

void
FileWriterBase::open(){

    std::string suffix = FileFormats::type_to_string(t_);
    std::string filename = file_name_+"."+suffix;
    file_.open(filename,std::ios_base::app);
}

void FileWriterBase::write_header(){

    //if the file is not open
    if(!is_open()){
        throw std::logic_error("File "+file_name_+" is not open");
    }

    std::chrono::time_point<std::chrono::system_clock> now;
    now = std::chrono::system_clock::now();
    std::time_t now_time = std::chrono::system_clock::to_time_t(now);
    file_<<comment_mark_;
    file_<<"File Generated by physim at: "<<std::ctime(&now_time);
    file_.flush();
}

}
